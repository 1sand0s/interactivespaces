/*
 * Copyright (C) 2012 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

buildscript {
  repositories {
    add(new org.apache.ivy.plugins.resolver.URLResolver()) {
      name = 'GitHub'
      addArtifactPattern 'http://cloud.github.com/downloads/[organisation]/[module]/[module]-[revision].[ext]'
    }
    mavenCentral()
  }

//  dependencies {
//    classpath 'org.gradle.api.plugins:gradle-izpack-plugin:0.2.2'
//    classpath 'org.gradle.api.plugins:gradle-android-plugin:1.2.1'
//  }

}

allprojects {
  ext {
    // Specify the IS version here.
    //
    // The intermediate designation is for marking a particular build
    // as an intermediate version. An intermediate version must never
    // be pushed to production.
    //
    // Final versions should set the intermediate designation to null.
    interactiveSpacesVersion = '1.5.3'
    interactiveSpacesVersionIntermediateDesignation = 'SNAPSHOT'

    nonjavaProjects = [ 
      'interactivespaces_docs', 
      'interactivespaces-controller-android', 
      'service', 
      'interactivespaces_build', 
      'master', 'controller', 'workbench'
    ]

    javaProjects = rootProject.subprojects.findResults { (!nonjavaProjects.contains(it.name)) ? it : null }

    if (project.hasProperty("buildTypeProp")) {
      buildType = project.buildTypeProp
    } else {
      buildType = "standard"
    }

    if (buildType == 'android') {
      androidPlatformHome = getProperty("android.sdk.home") + "/platforms/" + getProperty("android.platform")
      androidPlatformTools = getProperty("android.sdk.home") + "/platform-tools"
      androidSdkJar = "$androidPlatformHome/android.jar"
    }

    osgiVersion = interactiveSpacesVersionIntermediateDesignation ? 
        interactiveSpacesVersion + "." + interactiveSpacesVersionIntermediateDesignation :
        interactiveSpacesVersion
  }

  group = 'interactivespaces'
  version = osgiVersion
}

subprojects {
  if (!ext.nonjavaProjects.contains(name)) {
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'eclipse'
    apply plugin: 'idea'

    if (name != 'interactivespaces-bootstrap-core') {
      apply plugin: 'osgi'
    }

    apply plugin: 'jacoco'
 
    jacocoTestReport {
      group = "reporting"
      description = "Generate Jacoco coverage reports after running tests."
      reports {
        xml.enabled true
        html.enabled true
        csv.enabled false
      }

      additionalSourceDirs = files(sourceSets.main.allJava.srcDirs)
    }

    // Add in configuratations to the standard Java build
    configurations {
      // dependencies which are provided by the container.
      provided
    }

    sourceSets {
      main { 
           // Provided libraries should be on the compile classpath, though
           // not in the compile configuration.
      	   compileClasspath += configurations.provided 
      }
    }

    // Provided dependencies need to be available to eclipse.
    eclipse.classpath.plusConfigurations += configurations.provided

    sourceCompatibility = 1.6

    repositories {
      mavenLocal()
      maven {
        url 'http://robotbrains.hideho.org/nexus/content/groups/ros-public'
      }
      mavenCentral()
    }

    install.dependsOn build
  }
}

defaultTasks 'install'
