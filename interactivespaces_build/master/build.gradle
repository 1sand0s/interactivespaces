/*
 * Copyright (C) 2013 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the * License for the specific language governing permissions and limitations under
 * the License.
 */

import org.apache.tools.ant.filters.ReplaceTokens

ext { containerType = "master" }

task cleanContainer(type: Exec) {
  commandLine "rm", "-fR", new File(project.projectDir, "target").absolutePath
}

task copyCore(type:Copy) {
  from rootProject.file('LICENSE.txt')
  from rootProject.file('LICENSE.thirdparties.txt')
  from rootProject.file('NOTICE.txt')
  from parent.file('template-common')
  from parent.file('common')
  from project.file('template')
  from project.file('src/izpack')
  into 'target/staging'
  filter(ReplaceTokens, tokens:[INTERACTIVESPACES_VERSION:project.version])
  filter(ReplaceTokens, tokens:[INTERACTIVESPACES_CONTAINER_TYPE:project.ext.containerType])
}

task copyPythonCore(type:Copy) {
  from "${project.getProperty('jython.home')}/Lib"
  into 'target/staging/lib/python/PyLib'
}

task copyPythonRelease(type:Copy) {
  from rootProject.file('interactivespaces_lib/src/main/python/release/common')
  from rootProject.file('interactivespaces_lib/src/main/python/release/master')
  into 'target/staging/lib/python/release'
}

task copyNeededComponents(dependsOn: [
  copyCore,
  copyPythonCore,
  copyPythonRelease,
  cleanContainer
])

task assembleContainers(type: Exec, dependsOn: [
  copyNeededComponents,
  cleanContainer
]) {
  commandLine "mvn", "install", "-DinteractiveSpacesVersion=${version}"
}

task installDev(type: Exec, dependsOn: [assembleContainers]) {
  // TODO(keith): get the common parts into a generic task available to all
  def stagingDir = new File(project.projectDir, "target/staging").absolutePath
  def containerDir = getProperty("interactivespaces.dev.home") + "/" + project.ext.containerType
  commandLine "bash", "../install_container.bash", version, project.ext.containerType, containerDir, stagingDir
}

task createImage(type: Copy, dependsOn: [assembleContainers]) {
  // TODO(keith): get the common parts into a generic task available to all
  if (project.hasProperty("imageHome")) {
    def stagingDir = new File(project.projectDir, "target/staging").absolutePath
    def containerDir = getProperty("imageHome") + "/" + project.ext.containerType

    from stagingDir
    into containerDir
    exclude 'config'
    exclude 'install.xml'
    exclude 'userInputLang.xml_eng'
    exclude 'user_input_spec.xml'
  }
}
